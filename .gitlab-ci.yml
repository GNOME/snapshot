stages:
  - check
  - test
  - deploy

variables:
  BUNDLE: "org.gnome.Snapshot.Devel.flatpak"
  MANIFEST_PATH: "build-aux/org.gnome.Snapshot.Devel.json"
  FLATPAK_MODULE: "snapshot"
  APP_ID: "org.gnome.Snapshot.Devel"
  RUNTIME_REPO: "https://nightly.gnome.org/gnome-nightly.flatpakrepo"

.flatpak:
  image: 'quay.io/gnome_infrastructure/gnome-runtime-images:gnome-master'
  stage: test
  script:
    - >
      xvfb-run -a -s "-screen 0 1024x768x24"
      flatpak-builder --keep-build-dirs --user --disable-rofiles-fuse flatpak_app --repo=repo ${BRANCH:+--default-branch=$BRANCH} ${MANIFEST_PATH}
    - flatpak build-bundle repo ${BUNDLE} --runtime-repo=${RUNTIME_REPO} ${APP_ID} ${BRANCH}
  artifacts:
    name: 'Flatpak artifacts'
    expose_as: 'Get Flatpak bundle here'
    when: 'always'
    paths:
      - "${BUNDLE}"
      - '.flatpak-builder/build/${FLATPAK_MODULE}/_flatpak_build/meson-logs/meson-log.txt'
      - '.flatpak-builder/build/${FLATPAK_MODULE}/_flatpak_build/meson-logs/testlog.txt'
    expire_in: 14 days

flatpak@x86_64:
  extends: ".flatpak"
  tags:
    - flatpak

flatpak@aarch64:
  extends: ".flatpak"
  tags:
    - flatpak-aarch64

rustfmt:
  image: "rust:slim"
  stage: check
  script:
    - rustup component add rustfmt
    - echo -e "" >> src/config.rs
    - rustc -Vv && cargo -Vv
    - cargo fmt --version
    - cargo fmt --all -- --color=always --check

cargo-doc:
  stage: test
  image: 'quay.io/gnome_infrastructure/gnome-runtime-images:gnome-master'
  interruptible: true
  tags:
    - flatpak
  artifacts:
    name: 'Code Documentation'
    paths:
      - doc
  script:
    # Report the installed versions of the runtime
    - flatpak info org.gnome.Platform
    - flatpak info org.gnome.Sdk

    # Print the date, since appstream depends on local timezone
    - date && date -u

    - rewrite-flatpak-manifest ${MANIFEST_PATH} ${FLATPAK_MODULE} ${CONFIG_OPTS}
    - flatpak-builder --user --disable-rofiles-fuse --build-only flatpak_app ${MANIFEST_PATH}
    - flatpak build-finish --socket=x11 --share=network flatpak_app
    - >
      xvfb-run -a -s "-screen 0 1024x768x24"
      flatpak-builder --user --disable-rofiles-fuse --build-shell=${FLATPAK_MODULE} flatpak_app ${MANIFEST_PATH} <<END
        ninja aperture/doc
      END
    - cp -r .flatpak-builder/build/${FLATPAK_MODULE}/_flatpak_build/aperture/doc doc
    - chmod -R a=rwx doc

pages:
  stage: deploy
  tags:
    - flatpak
  script:
    - mkdir public
    - mv doc public
  artifacts:
    paths:
      - 'public'
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

include:
  - project: "GNOME/citemplates"
    file: "flatpak/flatpak_ci_initiative.yml"

nightly@x86_64:
  extends: ".publish_nightly"
  needs: ["flatpak@x86_64"]

nightly@aarch64:
  extends: ".publish_nightly"
  needs: ["flatpak@aarch64"]
