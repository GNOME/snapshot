stages:
  - check
  - test
  - deploy

include:
  - project: "GNOME/citemplates"
    file: "templates/default-rules.yml"
  - project: "GNOME/citemplates"
    file: "flatpak/flatpak_ci_initiative.yml"
  - component: gitlab.gnome.org/GNOME/citemplates/release-service@master
    inputs:
      dist-job-name: "flatpak@x86_64"
      tarball-artifact-path: "${TARBALL_ARTIFACT_PATH}"
  - component: "gitlab.gnome.org/GNOME/citemplates/basic-deploy-docs@master"
    inputs:
      docs-job-name: "cargo-doc"

variables:
  BUNDLE: "org.gnome.Snapshot.Devel.flatpak"
  MANIFEST_PATH: "build-aux/org.gnome.Snapshot.Devel.json"
  FLATPAK_MODULE: "snapshot"
  APP_ID: "org.gnome.Snapshot.Devel"
  RUNTIME_REPO: "https://nightly.gnome.org/gnome-nightly.flatpakrepo"
  TARBALL_ARTIFACT_PATH: ".flatpak-builder/build/${FLATPAK_MODULE}/_flatpak_build/meson-dist/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.tar.xz"

flatpak@x86_64:
  extends: ".flatpak@x86_64"
  interruptible: true
  variables:
    CONFIG_OPTS: "-Dprofile=default"

flatpak@aarch64:
  extends: ".flatpak@aarch64"
  allow_failure: true
  interruptible: true
  variables:
    CONFIG_OPTS: "-Dprofile=default"

rustfmt:
  image: "rust:slim"
  stage: check
  script:
    - rustup component add rustfmt
    - echo -e "" >> src/config.rs
    - rustc -Vv && cargo -Vv
    - cargo fmt --version
    - cargo fmt --all -- --color=always --check

codespell:
  stage: check
  script:
    - dnf install -y codespell
    - codespell -S "*.png,*.po,.git,*.jpg" -L crate -f

cargo-doc:
  stage: test
  image: "ghcr.io/gtk-rs/gtk4-rs/gtk4:latest"
  interruptible: true
  artifacts:
    name: 'Code Documentation'
    paths:
      - ${CI_PROJECT_NAME}-docs.tar.gz
  variables:
    DOC_OPTIONS: |
      --extern-html-root-url=gtk4=https://gtk-rs.org/gtk4-rs/stable/latest/docs/
      --extern-html-root-url=gio=https://gtk-rs.org/gtk-rs-core/stable/latest/docs/
      --extern-html-root-url=glib=https://gtk-rs.org/gtk-rs-core/stable/latest/docs/
      --extern-html-root-url=gio=https://gtk-rs.org/gtk-rs-core/stable/latest/docs/
      --extern-html-root-url=gstreamer=https://gstreamer.pages.freedesktop.org/gstreamer-rs/stable/latest/docs/
  before_script:
    - sudo dnf install -y gstreamer1-devel gstreamer1-plugins-base-devel
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain none -y
    - source $HOME/.cargo/env
    - rustup toolchain install nightly --profile minimal --allow-downgrade
  script:
    - cargo +nightly rustdoc -p aperture -- -Z unstable-options ${DOC_OPTIONS}
    - tar --auto-compress --create --file "$CI_PROJECT_DIR/${CI_PROJECT_NAME}-docs.tar.gz" --directory "target/doc" .

cargo-audit:
  stage: test
  interruptible: true
  image: rust
  allow_failure: true
  script:
    - cargo install cargo-deny
    - cargo deny check advisories bans sources

nightly@x86_64:
  extends: ".publish_nightly"
  needs: ["flatpak@x86_64"]

nightly@aarch64:
  extends: ".publish_nightly"
  needs: ["flatpak@aarch64"]
